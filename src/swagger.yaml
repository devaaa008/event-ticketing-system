openapi: 3.0.0
info:
  title: Event Ticketing System
  version: 1.0.0
  description: API for managing events and tickets

paths:
  /events:
    post:
      summary: Create a new event
      tags:
        - Events
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventInput'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      summary: List all events
      tags:
        - Events
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Event'

  /events/{id}:
    get:
      summary: Get an event by ID
      tags:
        - Events
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /tickets/purchase:
    post:
      summary: Purchase tickets for an event
      tags:
        - Tickets
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TicketPurchaseInput'
      responses:
        '201':
          description: Ticket purchased successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ticket'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /tickets/report:
    get:
      summary: Get ticket sales report
      tags:
        - Tickets
      responses:
        '200':
          description: Report generated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TicketReport'
        '400':
          description: Error generating report
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    EventInput:
      type: object
      required:
        - name
        - date
        - location
      properties:
        name:
          type: string
        date:
          type: string
          format: date-time
        location:
          type: string
        description:
          type: string

    Event:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        date:
          type: string
          format: date-time
        location:
          type: string
        description:
          type: string

    TicketPurchaseInput:
      type: object
      required:
        - eventId
        - userId
        - noOfTickets
      properties:
        eventId:
          type: string
        userId:
          type: string
        noOfTickets:
          type: integer
          minimum: 1

    Ticket:
      type: object
      properties:
        id:
          type: string
        eventId:
          type: string
        userId:
          type: string
        noOfTickets:
          type: integer
        purchaseDate:
          type: string
          format: date-time

    TicketReport:
      type: object
      properties:
        totalTicketsSold:
          type: integer
        totalRevenue:
          type: number
        eventBreakdown:
          type: array
          items:
            type: object
            properties:
              eventId:
                type: string
              eventName:
                type: string
              ticketsSold:
                type: integer
              revenue:
                type: number

    Error:
      type: object
      properties:
        message:
          type: string